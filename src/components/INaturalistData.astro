---
interface Props {
  perPage?: number;
  taxonId?: number;
}

const { perPage = 5, taxonId } = Astro.props;
---

<div class="inaturalist-container">
  <input type="text" id="search-input" placeholder="Search observations...">
  <button id="search-button">Search</button>
  <div id="inaturalist-data" data-per-page={perPage} data-taxon-id={taxonId}>
    Loading iNaturalist data...
  </div>
</div>

<script>
  interface Observation {
    species_guess: string;
    observed_on: string;
    photos: { url: string }[];
  }

  const container = document.getElementById('inaturalist-data');
  const searchInput = document.getElementById('search-input') as HTMLInputElement;
  const searchButton = document.getElementById('search-button');

  if (container && searchInput && searchButton) {
    const perPage = container.dataset.perPage || '5';
    const taxonId = container.dataset.taxonId;

    async function fetchINaturalistData(query: string = '') {
      try {
        let url = `https://api.inaturalist.org/v1/observations?per_page=${perPage}`;
        if (taxonId) {
          url += `&taxon_id=${taxonId}`;
        }
        if (query) {
          url += `&q=${encodeURIComponent(query)}`;
        }
        const response = await fetch(url);
        const data = await response.json();
        
        container.innerHTML = ''; // Clear loading message
        
        if (data.results.length === 0) {
          container.innerHTML = 'No results found.';
          return;
        }

        data.results.forEach((observation: Observation) => {
          const observationElement = document.createElement('div');
          observationElement.innerHTML = `
            <h3>${observation.species_guess}</h3>
            <p>Observed on: ${new Date(observation.observed_on).toLocaleDateString()}</p>
            <img src="${observation.photos[0]?.url || ''}" alt="${observation.species_guess}" width="200">
          `;
          container.appendChild(observationElement);
        });
      } catch (error) {
        console.error('Error fetching iNaturalist data:', error);
        container.innerHTML = 'Error loading iNaturalist data.';
      }
    }

    searchButton.addEventListener('click', () => {
      fetchINaturalistData(searchInput.value);
    });

    searchInput.addEventListener('keypress', (event) => {
      if (event.key === 'Enter') {
        fetchINaturalistData(searchInput.value);
      }
    });

    // Initial load
    fetchINaturalistData();
  } else {
    console.error('Could not find necessary elements for iNaturalist data');
  }
</script>

<style>
  .inaturalist-container {
    margin-bottom: 20px;
  }
  #search-input {
    padding: 5px;
    margin-right: 10px;
  }
  #search-button {
    padding: 5px 10px;
  }
</style>
